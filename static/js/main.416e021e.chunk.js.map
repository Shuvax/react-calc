{"version":3,"sources":["wooden-background.jpg","Button.js","Comma.js","App.js","index.js"],"names":["module","exports","Button","content","onButtonClick","type","className","onClick","comma","value","output","decimal","isNeg","includes","substring","indexOf","parseFloat","toLocaleString","App","useState","setValue","memory","setMemory","operator","setOperator","handleButtonPress","num","toString","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.416e021e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wooden-background.b9ea4e52.jpg\";","import React from 'react';\r\nimport \"./Button.css\";\r\n\r\nconst Button = ({ content, onButtonClick, type,  }) => {\r\n    return (\r\n        <div className={`Button ${content === '0' ? 'zero' : ''} ${type || ''}`} onClick={onButtonClick(content)} >\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;","const comma = (value) => {\r\n\r\n    let output = '';\r\n    let decimal = '';\r\n    let isNeg = false;\r\n    \r\n    if (value.includes('.')) {\r\n        output = value.substring(0, value.indexOf('.'));\r\n        decimal = value.substring(value.indexOf('.'));\r\n    } else {\r\n        output = value;\r\n    }\r\n    if (parseFloat(value) < 0) {\r\n        isNeg = true;\r\n        output = output.substring(1);\r\n    } \r\n\r\n    return isNeg ? '-' + parseFloat(output).toLocaleString() + decimal : parseFloat(output).toLocaleString() + decimal; \r\n};\r\n\r\nexport default comma;","import React, { useState } from 'react';\r\nimport Button from './Button';\r\nimport comma from './Comma';\r\nimport './App.css';\r\nimport WoodBG from './wooden-background.jpg';\r\n\r\n\r\nconst App = () => {\r\n    const [value, setValue] = useState('0');\r\n    const [memory, setMemory] = useState(null);\r\n    const [operator, setOperator] = useState(null);\r\n    \r\n\r\n    const handleButtonPress = content => () => {\r\n        const num = parseFloat(value);\r\n        \r\n\r\n        if (content === 'AC') {\r\n            setValue('0');\r\n            setMemory(null);\r\n            setOperator(null);\r\n            return;\r\n        }\r\n\r\n        if (content === '±') {\r\n            setValue((num * -1).toString());\r\n            return;\r\n        }\r\n        if (content === '%') {\r\n            setValue((num / 100).toString());\r\n            setMemory(null);\r\n            setOperator(null);\r\n            return\r\n        }\r\n\r\n        if (content === '.') {\r\n            if (value.includes('.')) return;\r\n\r\n            setValue(value + '.');\r\n            return;\r\n        }\r\n\r\n        if (content === '+') {\r\n            if (operator !== null) {\r\n                if(operator === '+') {\r\n                    setMemory(memory + parseFloat(value));\r\n                } else if (operator === '−') {\r\n                    setMemory(memory - parseFloat(value));\r\n                } else if (operator === '×') {\r\n                    setMemory(memory * parseFloat(value));\r\n                } else if (operator === '÷') {\r\n                    setMemory(memory / parseFloat(value));\r\n                }\r\n            } else {\r\n                setMemory(parseFloat(value));\r\n            }\r\n            setValue('0');\r\n            setOperator('+');\r\n            return;\r\n        }\r\n        if (content === '−') {\r\n            if (operator !== null) {\r\n                if(operator === '+') {\r\n                    setMemory(memory + parseFloat(value));\r\n                } else if (operator === '−') {\r\n                    setMemory(memory - parseFloat(value));\r\n                } else if (operator === '×') {\r\n                    setMemory(memory * parseFloat(value));\r\n                } else if (operator === '÷') {\r\n                    setMemory(memory / parseFloat(value));\r\n                }\r\n            } else {\r\n                setMemory(parseFloat(value));\r\n            }\r\n            setValue('0');\r\n            setOperator('−');\r\n            return;\r\n        }\r\n        if (content === '×') {\r\n            if (operator !== null) {\r\n                if(operator === '+') {\r\n                    setMemory(memory + parseFloat(value));\r\n                } else if (operator === '−') {\r\n                    setMemory(memory - parseFloat(value));\r\n                } else if (operator === '×') {\r\n                    setMemory(memory * parseFloat(value));\r\n                } else if (operator === '÷') {\r\n                    setMemory(memory / parseFloat(value));\r\n                }\r\n            } else {\r\n                setMemory(parseFloat(value));\r\n            }\r\n            setValue('0');\r\n            setOperator('×');\r\n            return;\r\n        }\r\n\r\n        if (content === '÷') {\r\n            if (operator !== null) {\r\n                if(operator === '+') {\r\n                    setMemory(memory + parseFloat(value));\r\n                } else if (operator === '−') {\r\n                    setMemory(memory - parseFloat(value));\r\n                } else if (operator === '×') {\r\n                    setMemory(memory * parseFloat(value));\r\n                } else if (operator === '÷') {\r\n                    setMemory(memory / parseFloat(value));\r\n                }\r\n            } else {\r\n                setMemory(parseFloat(value));\r\n            }\r\n            setValue('0');\r\n            setOperator('÷');\r\n            return;\r\n        }\r\n\r\n        if (content === '=') {\r\n            if (!operator) {\r\n                return;\r\n            }\r\n\r\n            if(operator === '+') {\r\n                setValue((memory + parseFloat(value)).toString());\r\n            } else if (operator === '−') {\r\n                setValue((memory - parseFloat(value)).toString());\r\n            } else if (operator === '×') {\r\n                setValue((memory * parseFloat(value)).toString());\r\n            } else if (operator === '÷') {\r\n                setValue((memory / parseFloat(value)).toString());\r\n            }\r\n            setMemory(null);\r\n            setOperator(null);\r\n            return;\r\n        }\r\n\r\n        if (value[value.length -1] === '.') {\r\n            setValue(value + content);\r\n        } else {\r\n            setValue(parseFloat(num + content).toString());\r\n        }\r\n    };\r\n\r\n    return(\r\n        \r\n        <div className='App'>\r\n            <div className='display'>{comma(value)}</div>\r\n            <div className='buttons'>\r\n                <Button onButtonClick={handleButtonPress} content=\"AC\" type='function' />\r\n                <Button onButtonClick={handleButtonPress} content=\"±\" type='function' />\r\n                <Button onButtonClick={handleButtonPress} content=\"%\" type='function' />\r\n                <Button onButtonClick={handleButtonPress} content=\"÷\" type='operator' />\r\n                <Button onButtonClick={handleButtonPress} content=\"7\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"8\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"9\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"×\" type='operator' />\r\n                <Button onButtonClick={handleButtonPress} content=\"4\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"5\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"6\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"−\" type='operator' />\r\n                <Button onButtonClick={handleButtonPress} content=\"1\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"2\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"3\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"+\" type='operator' />\r\n                <Button onButtonClick={handleButtonPress} content=\"0\" />\r\n                <Button onButtonClick={handleButtonPress} content=\".\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"=\" type='operator' />  \r\n            </div>   \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n  "],"sourceRoot":""}